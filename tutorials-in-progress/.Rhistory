ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
vignette("xkcd-intro")
install.packages("extrafont")
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
font_import(pattern = "[X/x]kcd", prompt=FALSE)
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
likelihood <- dbinom(4, size=20, prob=0.5)
0.5/4
likelihood <- dbinom(3, size=3, prob=0.5)
likelihood <- dbinom(1, size=3, prob=0.5)
likelihood <- dbinom(2, size=3, prob=0.5)
likelihood <- dbinom(3, size=3, prob=0.5)
likelihood <- dbinom(2, size=3, prob=0.5)
likelihood <- dbinom(3, size=3, prob=0.5)
p <- c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood <- dbinom(3, size=3, prob=p)
prior <- c(0.125, 0.125, 0.5, 0.125, 0.125)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
barplot(posterior)
# What is the probability that the coin is biased towards heads (i.e p = 0.6 OR 0.8)
hist(posterior)
# What is the probability that the coin is biased towards heads (i.e p = 0.6 OR 0.8)
barplot(posterior)
prior <- c(rep(0.2, 5))
p <- c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood <- dbinom(3, size=3, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
barplot(posterior)
prior <- c(0.125, 0.125, 0.5, 0.125, 0.125)
p <- c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood <- dbinom(3, size=3, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
barplot(posterior)
posterior[-2] + posterior[-1]
posterior[4] + posterior[5]
50/365
1- (50/365)
prior <- c(0.8, 0.2)
likelihood <- c(0.127, 0.863)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.75, 0.25)
likelihood <- c(0.127, 0.863)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.127, 0.863)
likelihood <- c(0.75, 0.25)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
likelihood <- c(7/9, 2/9)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
likelihood <- c(0.8, 0.2)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.15, 0.85)
green <- dbinom(4, size=5, prob=0.66666)
likelihood <- c(green, 1 - green)
numerator <- prior * likelihood
denominator <- sum(numerator)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
green <- dbinom(1, size=5, prob=0.66666)
not_green <- dbinom(1, size=5, prob=0.66666)
likelihood <- c(green, 1 - green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
not_green <- dbinom(1, size=5, prob=0.66666)
likelihood <- c(1 - not_green, not_green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
not_green <- 1 - dbinom(1, size=5, prob=0.66666)
likelihood <- c(1 - not_green, not_green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
not_green <- 1 - dbinom(1, size=5, prob=0.66666)
green <- 1 - dbinom(1, size=5, prob=0.66666) # p-value for green
green <- 1 - dbinom(1, size=5, prob=0.66666) # p-value for green
likelihood <- c(green, 1- green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
yellow <- dbinom(1, size=5, prob=0.66666) + dbinom(0, size=5, prob=0.66666) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
yellow <- dbinom(1, size=5, prob=2/3) + dbinom(0, size=5, prob=2/3) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
yellow <- dbinom(0, size=5, prob=2/3) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
prior <- c(0.15, 0.85)
yellow <- dbinom(0, size=5, prob=2/3) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
prior <- c(0.5, 0.5)
p <- c(1/1000, 1/1000000) # both possilities for p
likelihood <- dbinom(0, size=10, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
dbinom(5, size=300, prob=0.01)
dbinom(4, size=300, prob=0.01)
dbinom(3, size=300, prob=0.01)
dbinom(2, size=300, prob=0.01)
dbinom(1, size=300, prob=0.01)
dbinom(0, size=300, prob=0.01)
probability <- 1 - dbinom(4, size=300, prob=0.01) -
dbinom(3, size=300, prob=0.01) -
dbinom(2, size=300, prob=0.01) -
dbinom(1, size=300, prob=0.01) -
dbinom(0, size=300, prob=0.01)
probability <- dbinom(5, size=300, prob=0.01)
prior <- c(20/32, 4/32, 6/32, 2/32)
likelihood <- c(binom(10, size=16, p=0.5), binom(10, size=17, p=0.5), binom(10, size=18, p=0.5), binom(10, size=19, p=0.5))
likelihood <- c(dbinom(10, size=16, p=0.5), dbinom(10, size=17, p=0.5), dbinom(10, size=18, p=0.5), dbinom(10, size=19, p=0.5))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(rep(1/3, 3))
likelihood <- c(ppois(10, lambda=1), ppois(10, lambda=2), ppois(10, lambda=3))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
ppois(10, lambda=1)
ppois(10, lambda=2)
ppois(10, lambda=3)
likelihood <- c(1, 0.9999917, 0.9997077)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
posterior <- numerator/denominator
likelihood <- c(dpois(10, lambda=1), dpois(10, lambda=2), dpois(10, lambda=3))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
likelihood
prior <- c(0.15, 0.85)
yellow <- dbinom(0, size=5, prob=2/3) + dbinom(1, size=5, prob=2/3) # p-value for 0 or 1 witnesses selecting yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
probability <- dbinom(5, size=300, prob=0.01, lower.tail=FALSE)
probability <- pbinom(5, size=300, prob=0.01, lower.tail=FALSE)
sum(dbinom(0:5, size=300, prob=0.01))
sum(dbinom(5:300, size=300, prob=0.01))
1- sum(dbinom(0:5, size=300, prob=0.01))
1-sum(dbinom(5:300, size=300, prob=0.01))
sum(dbinom(0:5, size=300, prob=0.01))
1 - sum(dbinom(0:5, size=300, prob=0.01))
1 - sum(dbinom(0:4, size=300, prob=0.01))
prior <- c(20/32, 4/32, 6/32, 2/32)
likelihood <- c(pbinom(10, size=16, p=0.5), pbinom(10, size=17, p=0.5), pbinom(10, size=18, p=0.5), pbinom(10, size=19, p=0.5))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
posterior
sum(posterior)
likelihood <- c(dbinom(10, size=16, p=0.5), dbinom(10, size=17, p=0.5), dbinom(10, size=18, p=0.5), dbinom(10, size=19, p=0.5))
# Posterior: "You are told that an unknown team won ten of its coin flips last season.
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
yellow <- sum(dbinom(0:1, size=5, prob=2/3)) # p-value for 0 or 1 witnesses selecting yellow
green_odds <- sum(dbinom(0:4, size=5, prob=2/3))
prior <- c(0.15, 0.85)
green_odds <- sum(dbinom(0:4, size=5, prob=2/3)) # p-value for 0 or 1 witnesses selecting yellow
likelihood <- c(green_odds, 1 - green_odds)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
prior <- c(20/32, 4/32, 6/32, 2/32)
likelihood <- c(dbinom(10, size=16, p=0.5), dbinom(10, size=17, p=0.5), dbinom(10, size=18, p=0.5), dbinom(10, size=19, p=0.5))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.8, 0.2)
p <- c(1/6, 0.175)
likelihood <- 1-pbinom(999-1, 6000, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
9,942/10000
9942/10000
dbinom(9942, size=10000, p=1)
dbinom(9942, size=10000, p=0.993)
dbinom(0:9942, size=10000, p=0.993)
sum(dbinom(0:9942, size=10000, p=0.993))
1 - sum(dbinom(0:9942, size=10000, p=0.993))
sum(dbinom(9943:10000, size=10000, p=0.993))
sum(dbinom(9943:10000, size=10000, p=0.993))
prior <- c((1/2) * (1/6), (1/6) * (1/3), (1/3) * (1/2))
likelihood <- (rep(1/3, 3))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
posterior
5/9
4/9
6/11
dbinom(5, size=5, prob=0.5)
prior <- c(0.5, 0.5)
N <- 5
extreme_data <- dbinom(N, size=N, prob=0.5)
likelihood <- c(extreme_data, 1 - extreme_data)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.5, 0.5)
N <- 6
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 4
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 4.5
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 4
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 5
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
sum(dbinom(9942:10000, size=10000, p=0.993))
install_github("StatsWithR/statsr")
install.packages("devtools")
library(devtools)
install_github("StatsWithR/statsr")
(1/3 * 1/2) / (1/2 * 1/2 + 1/3 * 1/2)
(1/2 * 1/2) / (1/2 * 1/2 + 1/3 * 1/2)
(1/3 * 1/2) / (1/2 * 1/2 + 1/3 * 1/2)
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("W"))
data3 = data.frame(machine=c(2L), outcome=c("W"))
data4 = data.frame(machine=c(2L), outcome=c("W"))
data5 = data.frame(machine=c(2L), outcome=c("L"))
bandit_posterior(data1)
%>% bandit_posterior(data2, prior=.)
%>% bandit_posterior(data3, prior=.)
%>% bandit_posterior(data4, prior=.)
%>% bandit_posterior(data5, prior=.)
library(dplyr)
bandit_posterior(data1)
%>% bandit_posterior(data2, prior=.)
%>% bandit_posterior(data3, prior=.)
%>% bandit_posterior(data4, prior=.)
%>% bandit_posterior(data5, prior=.)
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.) %>% bandit_posterior(data3, prior=.) %>% bandit_posterior(data4, prior=.) %>% bandit_posterior(data5, prior=.)
install_github("StatsWithR/statsr")
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.) %>% bandit_posterior(data3, prior=.) %>% bandit_posterior(data4, prior=.) %>% bandit_posterior(data5, prior=.)
library(statsr)
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.) %>% bandit_posterior(data3, prior=.) %>% bandit_posterior(data4, prior=.) %>% bandit_posterior(data5, prior=.)
runif(26, 120.0, 200.0)
runif(26, 18, 24)
sample(18:24, 26)
sample(18:24, 26, replace=T)
library(dplyr)
# Character vector
player_name <- c("Abdi", "Brit", "Chloe", "Dani", "Ed", "Fatosh", "Greg", "Hannah", "Isaak", "Jo", "Kasey", "Laura", "Maunela", "Nate", "Olive", "Penelope", "Quince", "Ralf", "Sara", "Theo", "Ursula", "Vince", "Wil", "Xander", "Yolanda", "Zeus")
team_name <- c("Dolphins", "Jets", "Sharks", "Jets", "Dolphins", "Sharks", "Dolphins", "Sharks", "Sharks", "Jets", "Sharks", "Dolphins", "Dolphins", "Sharks", "Dolphins", "Jets", "Dolphins", "Jets", "Sharks", "Jets", "Jets", "Dolphins", "Sharks", "Dolphins", "Jets", "Sharks")
# Numeric vector
player_weight <- c(177.49, 144.1, 161.6, 137.1, 193.1, 188.9, 121.0, 157.1, 195.1, 151.3, 124.5, 197.9, 190.8, 125.5, 139.0, 124.1, 138.3, 194.1, 167.9, 164.1, 171.6, 157.1, 161.8, 191.8, 167.9, 120.4)
# Integer vector
player_age <- c(24, 18, 21, 24, 21, 22, 20, 24, 22, 22, 21, 23, 21, 18, 18, 18, 18, 24, 19, 18, 20, 19, 23, 23, 23, 18)
# Logical vector
vegetarian <- c(TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE)
# Factor vector
tshirt_size <- factor(c("L", "XL", "S", "L", "M", "M", "L", "XL", "S", "S", "M", "M", "XL", "S", "S", "M", "S", "M", "L", "XL", "S", "S", "M", "L", "M", "M"), levels=c("S", "M", "L", "XL"))
baseball_tournament_df <- data.frame(player_name, team_name, player_weight, player_age, vegetarian, tshirt_size)
sample(5:10, 26, replace=T)
sample(0:40, 26, replace=T)
sample(0:30, 26, replace=T)
games_attended <- c(8, 6, 5, 9, 9, 6, 6, 6, 10, 9, 5, 9, 6, 8, 7, 9, 10, 5, 5, 7, 8, 7, 9, 7, 5, 7)
total_runs <- c(10, 10, 14, 4, 0, 17, 26, 12, 2, 10, 17, 0, 3, 13, 12, 13, 10, 0, 16, 19, 4, 22, 21, 14, 3, 4)
baseball_tournament_df <- data.frame(player_name, team_name, player_weight, player_age, vegetarian, tshirt_size)
baseball_filter_rows_df <- baseball_tournament_df %>% filter(player_age >=21)
View(baseball_filter_rows_df)
baseball_tournament_df <- baseball_tournament_df %>% mutate(mvp_score = (games_attended * 3) + total_runs)
View(baseball_tournament_df)
games_attended <- c(8, 6, 5, 9, 9, 6, 6, 6, 10, 9, 5, 9, 6, 8, 7, 9, 10, 5, 5, 7, 8, 7, 9, 7, 5, 7)
total_runs <- c(10, 10, 14, 4, 0, 17, 26, 12, 2, 10, 17, 0, 3, 13, 12, 13, 10, 0, 16, 19, 4, 22, 21, 14, 3, 4)
# Character vector
player_name <- c("Abdi", "Brit", "Chloe", "Dani", "Ed", "Fatosh", "Greg", "Hannah", "Isaak", "Jo", "Kasey", "Laura", "Maunela", "Nate", "Olive", "Penelope", "Quince", "Ralf", "Sara", "Theo", "Ursula", "Vince", "Wil", "Xander", "Yolanda", "Zeus")
team_name <- c("Dolphins", "Jets", "Sharks", "Jets", "Dolphins", "Sharks", "Dolphins", "Sharks", "Sharks", "Jets", "Sharks", "Dolphins", "Dolphins", "Sharks", "Dolphins", "Jets", "Dolphins", "Jets", "Sharks", "Jets", "Jets", "Dolphins", "Sharks", "Dolphins", "Jets", "Sharks")
# Numeric vector
player_weight <- c(177.49, 144.1, 161.6, 137.1, 193.1, 188.9, 121.0, 157.1, 195.1, 151.3, 124.5, 197.9, 190.8, 125.5, 139.0, 124.1, 138.3, 194.1, 167.9, 164.1, 171.6, 157.1, 161.8, 191.8, 167.9, 120.4)
# Integer vector
player_age <- c(24, 18, 21, 24, 21, 22, 20, 24, 22, 22, 21, 23, 21, 18, 18, 18, 18, 24, 19, 18, 20, 19, 23, 23, 23, 18)
# Logical vector
vegetarian <- c(TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE)
# Factor vector
tshirt_size <- factor(c("L", "XL", "S", "L", "M", "M", "L", "XL", "S", "S", "M", "M", "XL", "S", "S", "M", "S", "M", "L", "XL", "S", "S", "M", "L", "M", "M"), levels=c("S", "M", "L", "XL"))
games_attended <- c(8, 6, 5, 9, 9, 6, 6, 6, 10, 9, 5, 9, 6, 8, 7, 9, 10, 5, 5, 7, 8, 7, 9, 7, 5, 7)
total_runs <- c(10, 10, 14, 4, 0, 17, 26, 12, 2, 10, 17, 0, 3, 13, 12, 13, 10, 0, 16, 19, 4, 22, 21, 14, 3, 4)
baseball_tournament_df <- data.frame(player_name, team_name, player_weight, player_age, vegetarian, tshirt_size, games_attended, total_runs)
baseball_tournament_df <- baseball_tournament_df %>% mutate(mvp_score = (games_attended * 3) + total_runs)
View(baseball_tournament_df)
baseball_tournament_df %>% arrange(mvp_score)
baseball_tournament_df <- baseball_tournament_df %>% arrange(mvp_score)
View(baseball_tournament_df)
baseball_tournament_df <- baseball_tournament_df %>% arrange(desd(mvp_score))
View(baseball_tournament_df)
View(baseball_tournament_df)
baseball_tournament_df <- baseball_tournament_df %>% arrange(desc(mvp_score))
View(baseball_tournament_df)
baseball_tournament_df %>% filter(total_runs + 2)
baseball_tournament_df %>% filter(tshirt_size > "M")
baseball_tournament_df %>% filter(tshirt_size == "M")
baseball_tournament_df <- baseball_tournament_df %>% group_by(team_name)
View(baseball_tournament_df)
View(baseball_tournament_df)
baseball_tournament_df <- baseball_tournament_df %>% group_by(team_name)
View(baseball_tournament_df)
avg_total_runs_df <- baseball_tournament_df %>% group_by(team_name) %>% summarise(avg_total_runs = mean(total_runs))
View(avg_total_runs_df)
max_total_runs_df <- baseball_tournament_df %>% group_by(team_name) %>% summarise(max_total_runs = max(total_runs))
View(max_total_runs_df)
max(baseball_tournament_df$player_age)
baseball_tournament_df <- baseball_tournament_df %>% mutate(handicap = 24 - player_age) %>% arrange(team_name, handicap)
View(baseball_tournament_df)
new_df <- baseball_tournament_df %>% select(player_name, team_name, player_age) %>% mutate(handicap = 24 - player_age) %>% arrange(team_name, handicap)`
new_df <- baseball_tournament_df %>% select(player_name, team_name, player_age) %>% mutate(handicap = 24 - player_age) %>% arrange(team_name, handicap)
l
new_df <- baseball_tournament_df %>% select(player_name, team_name, player_age) %>% mutate(handicap = 24 - player_age) %>% arrange(team_name, handicap)
View(new_df)
new_df <- baseball_tournament_df %>% filter(team_name == "Dolphins" | team_name == "Sharks) %>% filter(vegetarian == TRUE)
View(new_df)
new_df <- baseball_tournament_df %>% filter(team_name == "Dolphins" | team_name == "Sharks) %>% filter(vegetarian == TRUE)
new_df <- baseball_tournament_df %>% filter(team_name == "Dolphins" | team_name == "Sharks) %>% filter(vegetarian)
new_df <- baseball_tournament_df %>% filter(team_name == "Dolphins" | team_name == "Sharks & vegetarian == TRUE)
new_df <- baseball_tournament_df %>% filter(team_name == "Dolphins" | team_name == "Sharks") %>% filter(vegetarian == TRUE)
View(new_df)
new_df <- baseball_tournament_df %>% filter(tshirt_size >= "L")
data <- read.csv("Benchmarking_Results__CY_2012_Public_Buildings.csv", header=TRUE, na.strings=c("N/A", "Not Available"))
setwd("~/Dropbox/EPSY-data-visualization-course-materials/tutorials-in-progress")
data <- read.csv("Benchmarking_Results__CY_2012_Public_Buildings.csv", header=TRUE, na.strings=c("N/A", "Not Available"))
View(data)
# Character vector
player_name <- c("Abdi", "Brit", "Chloe", "Dani", "Ed", "Fatosh", "Greg", "Hannah", "Isaak", "Jo", "Kasey", "Laura", "Maunela", "Nate", "Olive", "Penelope", "Quince", "Ralf", "Sara", "Theo", "Ursula", "Vince", "Wil", "Xander", "Yolanda", "Zeus")
team_name <- c("Dolphins", "Jets", "Sharks", "Jets", "Dolphins", "Sharks", "Dolphins", "Sharks", "Sharks", "Jets", "Sharks", "Dolphins", "Dolphins", "Sharks", "Dolphins", "Jets", "Dolphins", "Jets", "Sharks", "Jets", "Jets", "Dolphins", "Sharks", "Dolphins", "Jets", "Sharks")
# Numeric vector
player_weight <- c(177.49, 144.1, 161.6, 137.1, 193.1, 188.9, 121.0, 157.1, 195.1, 151.3, 124.5, 197.9, 190.8, 125.5, 139.0, 124.1, 138.3, 194.1, 167.9, 164.1, 171.6, 157.1, 161.8, 191.8, 167.9, 120.4)
# Integer vector
player_age <- c(24, 18, 21, 24, 21, 22, 20, 24, 22, 22, 21, 23, 21, 18, 18, 18, 18, 24, 19, 18, 20, 19, 23, 23, 23, 18)
# Logical vector
vegetarian <- c(TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE)
# Factor vector
tshirt_size <- factor(c("L", "XL", "S", "L", "M", "M", "L", "XL", "S", "S", "M", "M", "XL", "S", "S", "M", "S", "M", "L", "XL", "S", "S", "M", "L", "M", "M"), levels=c("S", "M", "L", "XL"))
# Integer vector
games_attended <- c(8, 6, 5, 9, 9, 6, 6, 6, 10, 9, 5, 9, 6, 8, 7, 9, 10, 5, 5, 7, 8, 7, 9, 7, 5, 7)
# Integer vector
total_runs <- c(10, 10, 14, 4, 0, 17, 26, 12, 2, 10, 17, 0, 3, 13, 12, 13, 10, 0, 16, 19, 4, 22, 21, 14, 3, 4)
baseball_tournament_df <- data.frame(player_name, team_name, player_weight, player_age, vegetarian, tshirt_size, games_attended, total_runs)
team_count_df <- <- baseball_tournament_df %>% group_by(team_name) %>% summarise(total_players = n())
team_count_df <- baseball_tournament_df %>% group_by(team_name) %>% summarise(total_players = n())
View(team_count_df)
new_df <- data %>% filter(Year_Built < 1970)
summary(data$ENERGY_STAR_score)
new_df <- data %>% filter(Year_Built < 1970 & ENERGY_STAR_score > 33.55)
View(new_df)
View(data)
data <- read.csv("Benchmarking_Results__CY_2012_Public_Buildings.csv", header=TRUE, na.strings=c("N/A", "Not Available"))
View(data)
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_SCORE)) +
xlab("Year built") +
ylab("Emergy Star score")
library(ggplot2)
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_SCORE)) +
xlab("Year built") +
ylab("Emergy Star score")
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_Score)) +
xlab("Year built") +
ylab("Emergy Star score")
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_score)) +
xlab("Year built") +
ylab("Emergy Star score")
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_score)) +
geom_point()
ggplot(data, aes(x=Prop_Flr_Area, y=water_gallons)) +
geom_point()
ggplot(data, aes(x=Prop_Flr_Area, y=as.numeric(water_gallons))) +
geom_point()
ggplot(data, aes(x=Prop_Flr_Area, y=as.numeric(water_gallons))) +
geom_point() +
geom_abline()
ggplot(data, aes(x=Prop_Flr_Area, y=as.numeric(water_gallons))) +
geom_point() +
geom_smooth(method='lm')
data_filtered <- data %>% filter(Prop_Flr_Area < 500000)
ggplot(data_filtered, aes(x=Prop_Flr_Area, y=as.numeric(water_gallons))) +
geom_point() +
geom_smooth(method='lm')
str(data$Prop_Flr_Area)
str(data$water_gallons)
data <- read.csv("Benchmarking_Results__CY_2012_Public_Buildings.csv", header=TRUE, na.strings=c("N/A", "Not Available", "#REF!"))
str(data$water_gallons)
data_filtered <- data %>% filter(Prop_Flr_Area < 500000)
ggplot(data_filtered, aes(x=Prop_Flr_Area, y=ENERGY_STAR_score)) +
geom_point() +
geom_smooth(method='lm')
data_filtered <- data %>% filter(Prop_Flr_Area < 500000)
ggplot(data, aes(x=Prop_Flr_Area, y=ENERGY_STAR_score)) +
geom_point() +
geom_smooth(method='lm')
data_filtered <- data %>% filter(Prop_Flr_Area < 500000)
ggplot(data_filtered, aes(x=Prop_Flr_Area, y=ENERGY_STAR_score)) +
geom_point() +
geom_smooth(method='lm')
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_score)) +
geom_point()
ggplot(data, aes(x=Prop_Flr_Area))
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_score)) +
geom_bar()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_boxplot()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_violin()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_violin(aes(Prop_Type))
str(data$Prop_Flr_Type)
str(data$Prop_Flr_Area)
ggplot(data, aes(x=Prop_Flr_Area, y=Prop_Type)) +
geom_violin()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_bar()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_hist()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_histogram()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_density()
ggplot(data, aes(x=Prop_Type, y=ENERGY_STAR_score)) +
geom_boxplot()
ggplot(data, aes(x=Prop_Type, y=ENERGY_STAR_score)) +
geom_violin()
ggplot(data, aes(x=Year_Built, y=ENERGY_STAR_score)) +
geom_boxplot()
ggplot(data, aes(x=Organization, y=ENERGY_STAR_score)) +
geom_point()
ggplot(data, aes(x=Organizati, y=ENERGY_STAR_score)) +
geom_point()
ggplot(data, aes(x=Organizati, y=ENERGY_STAR_score)) +
geom_boxplot()
ggplot(data, aes(x=Organizati, y=ENERGY_STAR_score)) +
geom_violin()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_histogram() +
geom_density()
ggplot(data, aes(x=Prop_Flr_Area)) +
geom_histogram() +
geom_density()
ggplot(data, aes(x=as.factor(Prop_Type), y=ENERGY_STAR_score)) +
geom_violin()
ggplot(data, aes(x=as.factor(Prop_Type), y=as.numeric(ENERGY_STAR_score))) +
geom_violin()
