abline(h = 0)
plot(mpg, resid(fit_uncontrolled));
abline(h = 0)
```{r, out.width=400px, out.height=300px}
```{r, out.width="400px", out.height="300px"}
```{r, out.width="4", out.height="3"}
```{r, fig.width="4", fig.height="3"}
```{r}
ggplot(mtcars, aes(y=mpg, x=as.factor(am), fill=as.factor(am))) +
---
boxplot_weight <- ggplot(mtcars, aes(y=wt, x=as.factor(am), fill=as.factor(am))) +
install.packages("gridExtra")
library("grid", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
require(grid)
install.packages("gridExtra")
```{r, echo=FALSE}
```{r echo=FALSE, message=FALSE}
install.packages("Shiny")
install.packages("shin")
install.packages("shiny")
install.packages("kable")
drv <- dbDriver("PostgreSQL")
library("RPostgreSQL")
library("sp") # library for managing spatial data
library("rgdal") # maybe need this?
library("rgeos") # this contains the readWKT function
library("wkb") # this contains the readWKB function; use along with 'sp' library to convert from WKB strings into spatial datatypes
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "humanistic_mapping_time", host = "54.173.215.15", port = 5432, user = "postgres")
dbExistsTable(con, "msp_osm_gpx_points")
msp_osm_gpx_points_all <- dbGetQuery(con, "SELECT ogc_fid, track_fid, time, ST_X(wkb_geometry) AS lat, ST_Y(wkb_geometry) AS long
FROM msp_osm_gpx_points")
msp_osm_gpx_points_all <- dbGetQuery(con, "SELECT ogc_fid, track_fid, time, ST_X(wkb_geometry) AS lat, ST_Y(wkb_geometry) AS long
FROM msp_osm_gpx_points WHERE track_fid <= 50")
library("dbscan")
library("fpc") # include a dbscan function; use this to start?
library("ggplot2")
library("dplyr")
DBSCAN <- dbscan(msp_osm_gpx_points_all[,c("lat", "long")], eps = 10, MinPts = 10)
msp_osm_gpx_points_all <- dbGetQuery(con, "SELECT ogc_fid, track_fid, time, ST_X(wkb_geometry) AS lat, ST_Y(wkb_geometry) AS long
FROM msp_osm_gpx_points WHERE track_fid <= 25")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "humanistic_mapping_time", host = "54.173.215.15", port = 5432, user = "postgres")
dbExistsTable(con, "msp_osm_gpx_points")
msp_osm_gpx_points_all <- dbGetQuery(con, "SELECT ogc_fid, track_fid, time, ST_X(wkb_geometry) AS lat, ST_Y(wkb_geometry) AS long
FROM msp_osm_gpx_points WHERE track_fid <= 25")
DBSCAN <- dbscan(msp_osm_gpx_points_all[,c("lat", "long")], eps = 10, MinPts = 10)
DBSCAN$cluster # Note: cluster 0 = noise points!
msp_osm_gpx_points_clustered <- msp_osm_gpx_points_clustered %>% filter(cluster > 0)
msp_osm_gpx_points_clustered <- cbind(msp_osm_gpx_points, cluster=DBSCAN$cluster)
msp_osm_gpx_points_clustered <- cbind(msp_osm_gpx_points_all, cluster=DBSCAN$cluster)
msp_osm_gpx_points_clustered <- msp_osm_gpx_points_clustered %>% filter(cluster > 0)
msp_osm_gpx_points_clustered %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% filter(diversity >= 2)
diversity_values <- msp_osm_gpx_points_clustered %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% filter(diversity >= 2)
View(diversity_values)
dbWriteTable(con, "cluster_points_2", value = msp_osm_gpx_points_clustered, append = TRUE, row.names = FALSE)
dbWriteTable(con, "cluster_points_2", value = msp_osm_gpx_points_clustered, append = TRUE, row.names = FALSE)
msp_osm_gpx_points <- dbGetQuery(con, "SELECT ogc_fid, track_fid, time, ST_X(wkb_geometry) AS lat, ST_Y(wkb_geometry) AS long
FROM msp_osm_gpx_points WHERE track_fid <= 30 AND time IS NOT NULL")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "humanistic_mapping_time", host = "54.173.215.15", port = 5432, user = "postgres")
dbExistsTable(con, "msp_osm_gpx_points")
msp_osm_gpx_points <- dbGetQuery(con, "SELECT ogc_fid, track_fid, time, ST_X(wkb_geometry) AS lat, ST_Y(wkb_geometry) AS long
FROM msp_osm_gpx_points WHERE track_fid <= 30 AND time IS NOT NULL")
DBSCAN <- dbscan(msp_osm_gpx_points[,c("lat", "long")], eps = 20, MinPts = 5)
DBSCAN$cluster # Note: cluster 0 = noise points!
msp_osm_gpx_points_clustered <- cbind(msp_osm_gpx_points, cluster=DBSCAN$cluster)
msp_osm_gpx_points_clustered <- msp_osm_gpx_points_clustered %>% filter(cluster > 0)
msp_osm_gpx_points_clustered %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% filter(diversity >= 2)
diversity_valuse <- msp_osm_gpx_points_clustered %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% filter(diversity >= 2)
View(diversity_valuse)
diversity_values <- msp_osm_gpx_points_clustered %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% filter(diversity >= 2) %>% arrange(diversity)
View(diversity_valuse)
hist(diversity_values$diversity)
diversity_values <- msp_osm_gpx_points_clustered %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(diversity)
hist(diversity_values$diversity)
hist(diversity_values$diversity, main="Diversity values when eps = 20, minPts = 5")
DBSCAN2 <- dbscan(msp_osm_gpx_points[,c("lat", "long")], eps = 20, MinPts = 10)
msp_osm_gpx_points_clustered2 <- cbind(msp_osm_gpx_points, cluster=DBSCAN2$cluster)
msp_osm_gpx_points_clustered2 <- msp_osm_gpx_points_clustered2 %>% filter(cluster > 0)
diversity_values2 <- msp_osm_gpx_points_clustered2 %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(diversity)
hist(diversity_values2$diversity, xlab="diversity values", main="Histogram of diversity values (eps = 20, minPts = 10)")
msp_osm_gpx_points_clustered2 <- msp_osm_gpx_points_clustered2 %>% filter(cluster > 0)
diversity_values2 <- msp_osm_gpx_points_clustered2 %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(diversity)
hist(diversity_values2$diversity, xlab="diversity values", main="Histogram of diversity values (eps = 20, minPts = 10)")
View(diversity_values2)
diversity_values2 <- msp_osm_gpx_points_clustered2 %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(cluster)
View(diversity_values2)
hist(diversity_values$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values", main="Histogram of diversity values (eps = 20, minPts = 10)")
hist(diversity_values$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values", main="Histogram of diversity values (eps = 20, minPts = 5)")
hist(diversity_values2$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values", main="Histogram of diversity values (eps = 20, minPts = 10)")
DBSCAN3 <- dbscan(msp_osm_gpx_points[,c("lat", "long")], eps = 10, MinPts = 5)
msp_osm_gpx_points_clustered3 <- cbind(msp_osm_gpx_points, cluster=DBSCAN3$cluster)
msp_osm_gpx_points_clustered3 <- msp_osm_gpx_points_clustered2 %>% filter(cluster > 0)
diversity_values3 <- msp_osm_gpx_points_clustered3 %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(cluster)
View(diversity_valuse)
View(diversity_values3)
View(diversity_values2)
hist(diversity_values3$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values", main="Histogram of diversity values (eps = 10, minPts = 5)")
msp_osm_gpx_points_clustered3 <- cbind(msp_osm_gpx_points, cluster=DBSCAN3$cluster)
msp_osm_gpx_points_clustered3 <- msp_osm_gpx_points_clustered3 %>% filter(cluster > 0)
diversity_values3 <- msp_osm_gpx_points_clustered3 %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(cluster)
View(diversity_values3)
hist(diversity_values3$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values", main="Histogram of diversity values (eps = 10, minPts = 5)")
DBSCAN4 <- dbscan(msp_osm_gpx_points[,c("lat", "long")], eps = 10, MinPts = 10)
msp_osm_gpx_points_clustered4 <- cbind(msp_osm_gpx_points, cluster=DBSCAN4$cluster)
msp_osm_gpx_points_clustered4 <- msp_osm_gpx_points_clustered4 %>% filter(cluster > 0)
diversity_values4 <- msp_osm_gpx_points_clustered4 %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(cluster)
View(diversity_values4)
hist(diversity_values4$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values", main="Histogram of diversity values (eps = 10, minPts = 10)")
hist(diversity_values$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values (clusters = 277)", main="Histogram of diversity values (eps = 20, minPts = 5)")
hist(diversity_values2$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values (clusters = 132)", main="Histogram of diversity values (eps = 20, minPts = 10)")
hist(diversity_values3$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values (clusters = 232)", main="Histogram of diversity values (eps = 10, minPts = 5)")
hist(diversity_values4$diversity, breaks=c(1,2,3,4,5,6,7), xlab="diversity values (clusters = 92)", main="Histogram of diversity values (eps = 10, minPts = 10)")
msp_osm_gpx_points_clustered <- cbind(msp_osm_gpx_points, cluster=DBSCAN$cluster)
msp_osm_gpx_points_clustered <- msp_osm_gpx_points_clustered4 %>% filter(cluster > 0)
msp_osm_gpx_points_clustered <- cbind(msp_osm_gpx_points, cluster=DBSCAN$cluster)
msp_osm_gpx_points_clustered <- msp_osm_gpx_points_clustered %>% filter(cluster > 0)
msp_osm_gpx_points_clustered %>% group_by(cluster) %>% summarise(diversity = length(unique(track_fid))) %>% arrange(diversity)
dbWriteTable(con, "cluster_points", value = msp_osm_gpx_points_clustered, append = TRUE, row.names = FALSE)
library("RPostgreSQL")
install.packages("xkcd")
library("xkcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- lapply(x, function(d) d ^2)
y <- sapply(x, function(d) d ^2)
data_frame <- cbind(x, y)
View(data_frame)
View(data_frame)
xkcd_df <- as.data.frame(cbind(x, y))
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
y <- sapply(x, function(d) d ^2)
xkcd_df <- as.data.frame(cbind(x, y))
View(xkcd_df)
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdline(mapping, data, typexkcdline = "segment", mask = TRUE) +
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdline(xbegin, xkcd_df, typexkcdline = "segment", mask = TRUE) +
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100))
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
vignette("xkcd-intro")
install.packages("extrafont")
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
font_import(pattern = "[X/x]kcd", prompt=FALSE)
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
ggplot() + geom_point(aes(x, y), data=xkcd_df) +
xkcdaxis(c(0, 10), c(0, 100)) +
xkcdman(aes(x=x, y=y+1), xkcd_df)
theme_xkcd()
likelihood <- dbinom(4, size=20, prob=0.5)
0.5/4
likelihood <- dbinom(3, size=3, prob=0.5)
likelihood <- dbinom(1, size=3, prob=0.5)
likelihood <- dbinom(2, size=3, prob=0.5)
likelihood <- dbinom(3, size=3, prob=0.5)
likelihood <- dbinom(2, size=3, prob=0.5)
likelihood <- dbinom(3, size=3, prob=0.5)
p <- c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood <- dbinom(3, size=3, prob=p)
prior <- c(0.125, 0.125, 0.5, 0.125, 0.125)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
barplot(posterior)
# What is the probability that the coin is biased towards heads (i.e p = 0.6 OR 0.8)
hist(posterior)
# What is the probability that the coin is biased towards heads (i.e p = 0.6 OR 0.8)
barplot(posterior)
prior <- c(rep(0.2, 5))
p <- c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood <- dbinom(3, size=3, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
barplot(posterior)
prior <- c(0.125, 0.125, 0.5, 0.125, 0.125)
p <- c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood <- dbinom(3, size=3, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
barplot(posterior)
posterior[-2] + posterior[-1]
posterior[4] + posterior[5]
50/365
1- (50/365)
prior <- c(0.8, 0.2)
likelihood <- c(0.127, 0.863)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.75, 0.25)
likelihood <- c(0.127, 0.863)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.127, 0.863)
likelihood <- c(0.75, 0.25)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
likelihood <- c(7/9, 2/9)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
likelihood <- c(0.8, 0.2)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.15, 0.85)
green <- dbinom(4, size=5, prob=0.66666)
likelihood <- c(green, 1 - green)
numerator <- prior * likelihood
denominator <- sum(numerator)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
green <- dbinom(1, size=5, prob=0.66666)
not_green <- dbinom(1, size=5, prob=0.66666)
likelihood <- c(green, 1 - green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
not_green <- dbinom(1, size=5, prob=0.66666)
likelihood <- c(1 - not_green, not_green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
not_green <- 1 - dbinom(1, size=5, prob=0.66666)
likelihood <- c(1 - not_green, not_green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
not_green <- 1 - dbinom(1, size=5, prob=0.66666)
green <- 1 - dbinom(1, size=5, prob=0.66666) # p-value for green
green <- 1 - dbinom(1, size=5, prob=0.66666) # p-value for green
likelihood <- c(green, 1- green)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
yellow <- dbinom(1, size=5, prob=0.66666) + dbinom(0, size=5, prob=0.66666) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
yellow <- dbinom(1, size=5, prob=2/3) + dbinom(0, size=5, prob=2/3) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
yellow <- dbinom(0, size=5, prob=2/3) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
prior <- c(0.15, 0.85)
yellow <- dbinom(0, size=5, prob=2/3) # p-value for yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
prior <- c(0.5, 0.5)
p <- c(1/1000, 1/1000000) # both possilities for p
likelihood <- dbinom(0, size=10, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
dbinom(5, size=300, prob=0.01)
dbinom(4, size=300, prob=0.01)
dbinom(3, size=300, prob=0.01)
dbinom(2, size=300, prob=0.01)
dbinom(1, size=300, prob=0.01)
dbinom(0, size=300, prob=0.01)
probability <- 1 - dbinom(4, size=300, prob=0.01) -
dbinom(3, size=300, prob=0.01) -
dbinom(2, size=300, prob=0.01) -
dbinom(1, size=300, prob=0.01) -
dbinom(0, size=300, prob=0.01)
probability <- dbinom(5, size=300, prob=0.01)
prior <- c(20/32, 4/32, 6/32, 2/32)
likelihood <- c(binom(10, size=16, p=0.5), binom(10, size=17, p=0.5), binom(10, size=18, p=0.5), binom(10, size=19, p=0.5))
likelihood <- c(dbinom(10, size=16, p=0.5), dbinom(10, size=17, p=0.5), dbinom(10, size=18, p=0.5), dbinom(10, size=19, p=0.5))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(rep(1/3, 3))
likelihood <- c(ppois(10, lambda=1), ppois(10, lambda=2), ppois(10, lambda=3))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
ppois(10, lambda=1)
ppois(10, lambda=2)
ppois(10, lambda=3)
likelihood <- c(1, 0.9999917, 0.9997077)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
posterior <- numerator/denominator
likelihood <- c(dpois(10, lambda=1), dpois(10, lambda=2), dpois(10, lambda=3))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
likelihood
prior <- c(0.15, 0.85)
yellow <- dbinom(0, size=5, prob=2/3) + dbinom(1, size=5, prob=2/3) # p-value for 0 or 1 witnesses selecting yellow
likelihood <- c(1 - yellow, yellow)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
probability <- dbinom(5, size=300, prob=0.01, lower.tail=FALSE)
probability <- pbinom(5, size=300, prob=0.01, lower.tail=FALSE)
sum(dbinom(0:5, size=300, prob=0.01))
sum(dbinom(5:300, size=300, prob=0.01))
1- sum(dbinom(0:5, size=300, prob=0.01))
1-sum(dbinom(5:300, size=300, prob=0.01))
sum(dbinom(0:5, size=300, prob=0.01))
1 - sum(dbinom(0:5, size=300, prob=0.01))
1 - sum(dbinom(0:4, size=300, prob=0.01))
prior <- c(20/32, 4/32, 6/32, 2/32)
likelihood <- c(pbinom(10, size=16, p=0.5), pbinom(10, size=17, p=0.5), pbinom(10, size=18, p=0.5), pbinom(10, size=19, p=0.5))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
posterior
sum(posterior)
likelihood <- c(dbinom(10, size=16, p=0.5), dbinom(10, size=17, p=0.5), dbinom(10, size=18, p=0.5), dbinom(10, size=19, p=0.5))
# Posterior: "You are told that an unknown team won ten of its coin flips last season.
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
yellow <- sum(dbinom(0:1, size=5, prob=2/3)) # p-value for 0 or 1 witnesses selecting yellow
green_odds <- sum(dbinom(0:4, size=5, prob=2/3))
prior <- c(0.15, 0.85)
green_odds <- sum(dbinom(0:4, size=5, prob=2/3)) # p-value for 0 or 1 witnesses selecting yellow
likelihood <- c(green_odds, 1 - green_odds)
numerator <- prior * likelihood
denominator <- sum(numerator) # what does this mean? Why is it not equal to 1?
posterior <- numerator/denominator
prior <- c(20/32, 4/32, 6/32, 2/32)
likelihood <- c(dbinom(10, size=16, p=0.5), dbinom(10, size=17, p=0.5), dbinom(10, size=18, p=0.5), dbinom(10, size=19, p=0.5))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.8, 0.2)
p <- c(1/6, 0.175)
likelihood <- 1-pbinom(999-1, 6000, prob=p)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
9,942/10000
9942/10000
dbinom(9942, size=10000, p=1)
dbinom(9942, size=10000, p=0.993)
dbinom(0:9942, size=10000, p=0.993)
sum(dbinom(0:9942, size=10000, p=0.993))
1 - sum(dbinom(0:9942, size=10000, p=0.993))
sum(dbinom(9943:10000, size=10000, p=0.993))
sum(dbinom(9943:10000, size=10000, p=0.993))
prior <- c((1/2) * (1/6), (1/6) * (1/3), (1/3) * (1/2))
likelihood <- (rep(1/3, 3))
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
posterior
5/9
4/9
6/11
dbinom(5, size=5, prob=0.5)
prior <- c(0.5, 0.5)
N <- 5
extreme_data <- dbinom(N, size=N, prob=0.5)
likelihood <- c(extreme_data, 1 - extreme_data)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
prior <- c(0.5, 0.5)
N <- 6
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 4
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 4.5
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 4
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
N <- 5
extremeness <- dbinom(N, size=N, prob=0.5)
likelihood <- c(1 - extremeness, extremeness)
numerator <- prior * likelihood
denominator <- sum(numerator)
posterior <- numerator/denominator
sum(dbinom(9942:10000, size=10000, p=0.993))
install_github("StatsWithR/statsr")
install.packages("devtools")
library(devtools)
install_github("StatsWithR/statsr")
(1/3 * 1/2) / (1/2 * 1/2 + 1/3 * 1/2)
(1/2 * 1/2) / (1/2 * 1/2 + 1/3 * 1/2)
(1/3 * 1/2) / (1/2 * 1/2 + 1/3 * 1/2)
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("W"))
data3 = data.frame(machine=c(2L), outcome=c("W"))
data4 = data.frame(machine=c(2L), outcome=c("W"))
data5 = data.frame(machine=c(2L), outcome=c("L"))
bandit_posterior(data1)
%>% bandit_posterior(data2, prior=.)
%>% bandit_posterior(data3, prior=.)
%>% bandit_posterior(data4, prior=.)
%>% bandit_posterior(data5, prior=.)
library(dplyr)
bandit_posterior(data1)
%>% bandit_posterior(data2, prior=.)
%>% bandit_posterior(data3, prior=.)
%>% bandit_posterior(data4, prior=.)
%>% bandit_posterior(data5, prior=.)
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.) %>% bandit_posterior(data3, prior=.) %>% bandit_posterior(data4, prior=.) %>% bandit_posterior(data5, prior=.)
install_github("StatsWithR/statsr")
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.) %>% bandit_posterior(data3, prior=.) %>% bandit_posterior(data4, prior=.) %>% bandit_posterior(data5, prior=.)
library(statsr)
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.) %>% bandit_posterior(data3, prior=.) %>% bandit_posterior(data4, prior=.) %>% bandit_posterior(data5, prior=.)
load("~/Dropbox/Coursera Stuff/Bayesian Statistics/Final Project/movies.Rdata")
library(ggplot2)
library(gridExtra)
library(knitr)
library(dplyr)
library(statsr)
library(BAS)
load("movies.Rdata")
movies <- movies %>% mutate(feature_film = ifelse(title_type == "Feature Film", "yes", "no"))
movies <- movies %>% mutate(drama = ifelse(genre == "Drama", "yes", "no"))
movies <- movies %>% mutate(mpaa_rating_R = ifelse(mpaa_rating == "R", "yes", "no"))
movies <- movies %>% mutate(oscar_season = ifelse(thtr_rel_month == 10 | thtr_rel_month == 11 | thtr_rel_month == 12, "yes", "no"))
movies <- movies %>% mutate(summer_season = ifelse(thtr_rel_month == 5 | thtr_rel_month == 6 | thtr_rel_month == 7 | thtr_rel_month == 8, "yes", "no"))
movies <- movies[complete.cases(movies$feature_film, movies$drama, movies$runtime, movies$mpaa_rating_R, movies$thtr_rel_year, movies$oscar_season, movies$summer_season, movies$imdb_rating, movies$imdb_num_votes, movies$critics_score, movies$best_pic_nom, movies$best_pic_win, movies$best_actor_win, movies$best_actress_win, movies$best_dir_win, movies$top200_box), ]
format(coef(model_all_vars), scientific=FALSE)
model_all_vars <- bas.lm(audience_score ~ feature_film + drama + runtime + mpaa_rating_R + thtr_rel_year + oscar_season + summer_season + imdb_rating + imdb_num_votes + critics_score + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box, data = movies, prior="AIC", modelprior=uniform())
summary(model_all_vars)
summary(model_all_vars)
coef(model_all_vars)
5.155e-01
1.000e+00
9.667e-01
options(scipen=999)
coef(model_all_vars)
model_2 <- bas.lm(audience_score ~ feature_film + drama + runtime + thtr_rel_year + imdb_rating + log(imdb_num_votes) + best_pic_nom + best_dir_win + top200_box, data = movies, prior="AIC", modelprior=uniform())
coef(model_2)
confint(coef(model_all_vars))
image(model_all_vars)
image(model_all_vars, rotate=F)
image(model_2, rotate=F)
coef(model_2)
confint(coef(model_2))
citation()
citation(graphics)
citation("graphics")
confint(coef(model_2))
load("~/Dropbox/Coursera Stuff/Bayesian Statistics/Final Project/movies.Rdata")
opt = which(movies_var$imdb_rating==8.3)
opt = which(movies$imdb_rating==8.3)
t(movies[opt,])
movies %>% filter(imdb_rating == 8.3)
library(dplyr)
movies %>% filter(imdb_rating == 8.3)
movies <- mutate(movies,
feature_film = factor(title_type=='Feature Film', labels=c("No", "Yes")),
drama = factor(genre=='Drama', labels=c("No", "Yes")),
mpaa_rating_R = factor(mpaa_rating == 'R', labels=c("No", "Yes")),
oscar_season = factor(between(thtr_rel_month, 10,12), labels=c("No", "Yes")),
summer_season = factor(between(thtr_rel_month, 5,8), labels=c("No", "Yes"))
)
View(movies)
setwd("~/Dropbox/EPSY-data-visualization-course-materials/tutorials-in-progress")
setwd("~/Dropbox/EPSY-data-visualization-course-materials/tutorials-in-progress")
library(ggplot2)
tidy_data <- read.csv("tidy_data_example.csv", header=TRUE)
ggplot(tidy_data, aes(x=year, y=percent_with_severe_housing_problems, col=race_ethnicity)) +
geom_line()
View(tidy_data)
